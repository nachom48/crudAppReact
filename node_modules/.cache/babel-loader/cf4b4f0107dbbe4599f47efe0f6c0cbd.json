{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\54351\\\\Desktop\\\\Tutoriales Jon Mircha\\\\Crud App\\\\src\\\\components\\\\CrudApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CrudForm from './CrudForm';\nimport CrudTable from './CrudTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialDb = [{\n  id: 1,\n  name: \"Seya\",\n  constellation: \"Pegasus\"\n}, {\n  id: 2,\n  name: \"Shiryu\",\n  constellation: \"Dragon\"\n}, {\n  id: 3,\n  name: \"Shun\",\n  constellation: \"Andromeda\"\n}, {\n  id: 4,\n  name: \"Ikki\",\n  constellation: \"Fenix\"\n}, {\n  id: 5,\n  name: \"Hyoga\",\n  constellation: \"Cisne\"\n}];\n\nconst CrudApp = () => {\n  _s();\n\n  const [db, setDb] = useState(initialDb);\n  const [dataToEdit, setDataToEdit] = useState(null);\n\n  const createData = data => {\n    //id with the local time stamp in the very second\n    data.id = Date.now();\n    setDb([...db, data]);\n  };\n\n  const updateData = data => {\n    //if ID matches data replaces for new data,if not element remains the same\n    let newData = db.map(el => el.id === data.id ? data : el);\n    setDb(newData);\n  };\n\n  const deleteData = id => {\n    let isDelete = window.confirm(`¿Estas seguro de eliminar el registro con el id ${id}`);\n\n    if (isDelete) {\n      //when id is different db will fill\n      let newData = db.filter(el => el.id !== id);\n      setDb(newData);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Esta es una app de Crud con React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"grid-1-2\",\n      children: [/*#__PURE__*/_jsxDEV(CrudForm, {\n        createData: createData,\n        updateData: updateData,\n        dataToEdit: dataToEdit,\n        setDataToEdit: setDataToEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CrudTable, {\n        dataBase: db,\n        setDataToEdit: setDataToEdit,\n        deleteData: deleteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CrudApp, \"VCMhye17hzME/Ht4nPUrvU6cRUU=\");\n\n_c = CrudApp;\nexport default CrudApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CrudApp\");","map":{"version":3,"names":["React","useState","CrudForm","CrudTable","initialDb","id","name","constellation","CrudApp","db","setDb","dataToEdit","setDataToEdit","createData","data","Date","now","updateData","newData","map","el","deleteData","isDelete","window","confirm","filter"],"sources":["C:/Users/54351/Desktop/Tutoriales Jon Mircha/Crud App/src/components/CrudApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CrudForm from './CrudForm'\r\nimport CrudTable from './CrudTable'\r\n\r\n\r\nconst initialDb=[\r\n    {\r\n        id:1,\r\n        name:\"Seya\",\r\n        constellation:\"Pegasus\",\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"Shiryu\",\r\n        constellation:\"Dragon\",\r\n    },\r\n    {\r\n        id:3,\r\n        name:\"Shun\",\r\n        constellation:\"Andromeda\",\r\n    },\r\n    {\r\n        id:4,\r\n        name:\"Ikki\",\r\n        constellation:\"Fenix\",\r\n    },\r\n    {\r\n        id:5,\r\n        name:\"Hyoga\",\r\n        constellation:\"Cisne\",\r\n    },\r\n]\r\n\r\n\r\nconst CrudApp = () => {\r\n    const [db,setDb]=useState(initialDb);\r\n    const [dataToEdit,setDataToEdit]=useState(null);\r\n\r\n    const createData=(data)=>{\r\n        //id with the local time stamp in the very second\r\n        data.id=Date.now();\r\n        setDb([...db,data])\r\n    };\r\n    const updateData=(data)=>{\r\n        //if ID matches data replaces for new data,if not element remains the same\r\n        let newData= db.map(el=> el.id===data.id?data:el);\r\n        setDb(newData);\r\n    }\r\n    const deleteData=(id)=>{\r\n        let isDelete= window.confirm(`¿Estas seguro de eliminar el registro con el id ${id}`)\r\n        if(isDelete){\r\n            //when id is different db will fill\r\n            let newData=db.filter(el=>el.id!==id);\r\n            setDb(newData);\r\n        }\r\n\r\n\r\n       \r\n    \r\n    }\r\n  return (\r\n      <>\r\n      <h2>Esta es una app de Crud con React</h2>\r\n      <article className=\"grid-1-2\">\r\n      <CrudForm\r\n        createData={createData}\r\n        updateData={updateData}\r\n        dataToEdit={dataToEdit}\r\n        setDataToEdit={setDataToEdit}\r\n      />\r\n      <CrudTable \r\n      dataBase={db} \r\n      setDataToEdit={setDataToEdit}\r\n      deleteData={deleteData}\r\n      />\r\n      </article>\r\n      </>\r\n      )\r\n}\r\n\r\nexport default CrudApp"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAGA,MAAMC,SAAS,GAAC,CACZ;EACIC,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC,MAFT;EAGIC,aAAa,EAAC;AAHlB,CADY,EAMZ;EACIF,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC,QAFT;EAGIC,aAAa,EAAC;AAHlB,CANY,EAWZ;EACIF,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC,MAFT;EAGIC,aAAa,EAAC;AAHlB,CAXY,EAgBZ;EACIF,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC,MAFT;EAGIC,aAAa,EAAC;AAHlB,CAhBY,EAqBZ;EACIF,EAAE,EAAC,CADP;EAEIC,IAAI,EAAC,OAFT;EAGIC,aAAa,EAAC;AAHlB,CArBY,CAAhB;;AA6BA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EAClB,MAAM,CAACC,EAAD,EAAIC,KAAJ,IAAWT,QAAQ,CAACG,SAAD,CAAzB;EACA,MAAM,CAACO,UAAD,EAAYC,aAAZ,IAA2BX,QAAQ,CAAC,IAAD,CAAzC;;EAEA,MAAMY,UAAU,GAAEC,IAAD,IAAQ;IACrB;IACAA,IAAI,CAACT,EAAL,GAAQU,IAAI,CAACC,GAAL,EAAR;IACAN,KAAK,CAAC,CAAC,GAAGD,EAAJ,EAAOK,IAAP,CAAD,CAAL;EACH,CAJD;;EAKA,MAAMG,UAAU,GAAEH,IAAD,IAAQ;IACrB;IACA,IAAII,OAAO,GAAET,EAAE,CAACU,GAAH,CAAOC,EAAE,IAAGA,EAAE,CAACf,EAAH,KAAQS,IAAI,CAACT,EAAb,GAAgBS,IAAhB,GAAqBM,EAAjC,CAAb;IACAV,KAAK,CAACQ,OAAD,CAAL;EACH,CAJD;;EAKA,MAAMG,UAAU,GAAEhB,EAAD,IAAM;IACnB,IAAIiB,QAAQ,GAAEC,MAAM,CAACC,OAAP,CAAgB,mDAAkDnB,EAAG,EAArE,CAAd;;IACA,IAAGiB,QAAH,EAAY;MACR;MACA,IAAIJ,OAAO,GAACT,EAAE,CAACgB,MAAH,CAAUL,EAAE,IAAEA,EAAE,CAACf,EAAH,KAAQA,EAAtB,CAAZ;MACAK,KAAK,CAACQ,OAAD,CAAL;IACH;EAKJ,CAXD;;EAYF,oBACI;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAS,SAAS,EAAC,UAAnB;MAAA,wBACA,QAAC,QAAD;QACE,UAAU,EAAEL,UADd;QAEE,UAAU,EAAEI,UAFd;QAGE,UAAU,EAAEN,UAHd;QAIE,aAAa,EAAEC;MAJjB;QAAA;QAAA;QAAA;MAAA,QADA,eAOA,QAAC,SAAD;QACA,QAAQ,EAAEH,EADV;QAEA,aAAa,EAAEG,aAFf;QAGA,UAAU,EAAES;MAHZ;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA,gBADJ;AAkBD,CA5CD;;GAAMb,O;;KAAAA,O;AA8CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}